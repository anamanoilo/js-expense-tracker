{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/uuid/dist/esm-browser/index.js","js/services/localStorage.js","index.js"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","validate","uuid","REGEX","test","stringify","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","TypeError","v1","_nodeId","_clockseq","_lastMSecs","_lastNSecs","options","buf","b","Array","node","clockseq","undefined","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","parse","v","parseInt","stringToBytes","str","unescape","encodeURIComponent","bytes","length","charCodeAt","DNS","URL","v35","name","version","hashfunc","generateUUID","value","namespace","_namespace","set","err","md5","msg","md5ToHexEncodedArray","wordsToMd5","bytesToWords","input","output","length32","x","hex","charAt","getOutputLength","inputLength8","len","a","c","d","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","Uint32Array","y","lsw","msw","bitRotateLeft","num","cnt","md5cmn","q","s","t","v3","randomUUID","v4","native","rnds","sha1","f","z","ROTL","K","H","isArray","prototype","call","l","N","Math","ceil","M","j","pow","floor","W","e","T","v5","save","key","localStorage","setItem","JSON","error","get","getItem","remove","removeItem","transactionsToTest","id","amount","text","refs","totalBalance","document","querySelector","income","expense","transactionList","form","transactions","storage","renderTransactionList","markup","map","createTransactionMarkup","join","insertAdjacentHTML","addTransaction","preventDefault","elements","currentTarget","trim","alert","normalizedAmount","Number","toFixed","transactionObj","transactionMarkup","updateTotals","reset","deleteTransaction","target","filter","transaction","innerHTML","totalIncome","totalExpense","textContent","addEventListener"],"mappings":"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","file":"src.360d12ac.js","sourceRoot":"../src","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = key => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import { v4 as uuidv4 } from 'uuid';\nimport * as storage from './js/services/localStorage';\n\n\nconst transactionsToTest = [\n  {\n    id: '1',\n    amount: 2500,\n    text: 'Salary',\n  },\n  {\n    id: '2',\n    amount: -150,\n    text: 'Donation',\n  },\n  {\n    id: '3',\n    amount: -15,\n    text: 'Book',\n  },\n  {\n    id: '4',\n    amount: -3,\n    text: 'Coffee',\n  },\n  {\n    id: '5',\n    amount: 100,\n    text: 'Present',\n  },\n];\n\nconst refs = {\n  totalBalance: document.querySelector('#balance'),\n  income: document.querySelector('#money-plus'),\n  expense: document.querySelector('#money-minus'),\n  transactionList: document.querySelector('#list'),\n  form: document.querySelector('#form'),\n};\n\n\nlet transactions = storage.get('transactions') || [];\n\nrenderTransactionList(transactions);\nupdateTotals(transactions);\nrefs.transactionList.addEventListener('click', deleteTransaction);\nrefs.form.addEventListener('submit', addTransaction);\n\nfunction renderTransactionList(transactions) {\n  const markup = transactions\n    .map(({ id, amount, text }) => createTransactionMarkup({ id, amount, text }))\n    .join('');\n  refs.transactionList.insertAdjacentHTML('afterbegin', markup);\n}\n\nfunction createTransactionMarkup({ id, amount, text }) {\n  const amountClass = amount < 0 ? 'minus' : 'plus';\n  return `<li\n          class=${amountClass}\n        >\n          ${text} <span>${amount} </span\n          ><button id=${id} class=\"delete-btn\">x</button>\n        </li>`;\n}\n\nfunction addTransaction(e) {\n  e.preventDefault();\n  const {\n    elements: { text, amount },\n  } = e.currentTarget;\n  if (!text.value.trim() || !amount.value.trim()) {\n    alert('All the fields must be filled');\n    return;\n  }\n  \n  const normalizedAmount = Number(amount.value).toFixed(2);\n  if (normalizedAmount === '0.00') {\n    alert('Amount cannot be 0');\n    return;\n  }\n  const transactionObj = {\n    id: uuidv4(),\n    [amount.name]: Number(normalizedAmount),\n    [text.name]: text.value.trim(),\n  };\n\n  transactions.push(transactionObj);\n  const transactionMarkup = createTransactionMarkup(transactionObj);\n  refs.transactionList.insertAdjacentHTML('beforeend', transactionMarkup);\n  updateTotals(transactions);\n  storage.save('transactions', transactions);\n  e.currentTarget.reset();\n}\n\n\nfunction deleteTransaction(e) {\n  const id = e.target.id;\n  transactions = transactions.filter(transaction => transaction.id !== id);\n  refs.transactionList.innerHTML = '';\n  renderTransactionList(transactions);\n  updateTotals(transactions);\n  storage.save('transactions', transactions);\n}\n\n\n//count and render balance, income, expense in 1 loop\nfunction updateTotals(transactions) {\n  let totalBalance = 0;\n  let totalIncome = 0;\n  let totalExpense = 0;\n\n  for (const transaction of transactions) {\n    totalBalance += transaction.amount;\n    if (transaction.amount > 0) {\n      totalIncome += transaction.amount;\n    } else {\n      totalExpense += transaction.amount;\n    }\n  }\n  \n  refs.totalBalance.textContent = `$${totalBalance}`;\n  refs.income.textContent = `$${totalIncome}`;\n  refs.expense.textContent = `$${-totalExpense}`;\n}\n\n\n\n\n"]}