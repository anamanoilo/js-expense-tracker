{"version":3,"sources":["js/services/localStorage.js","index.js"],"names":["save","key","value","localStorage","setItem","JSON","stringify","error","get","parse","getItem","remove","removeItem","refs","totalBalance","document","querySelector","income","expense","transactionList","textInput","amountInput","addTransactionBtn","form","transactionsToTest","id","amount","text","transactions","renderTransactionList","markup","map","createTransactionMarkup","join","insertAdjacentHTML","addTransaction","e","preventDefault","elements","currentTarget","trim","alert","transactionObj","Date","now","toString","name","Number","console","log","push","storage","transactionMarkup","reset","deleteTransactionById","target","filteredTransactions","filter","transaction","innerHTML","addEventListener","total","reduce","acc","textContent","forEach","deleteButton"],"mappings":"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","file":"src.80175164.js","sourceRoot":"../src","sourcesContent":["const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = key => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import * as storage from './js/services/localStorage';\n\nconst refs = {\n  totalBalance: document.querySelector('#balance'),\n  income: document.querySelector('#money-plus'),\n  expense: document.querySelector('#money-minus'),\n  transactionList: document.querySelector('#list'),\n  textInput: document.querySelector('input#text'),\n  amountInput: document.querySelector('input#amount'),\n  addTransactionBtn: document.querySelector('.btn'),\n  form: document.querySelector('#form'),\n};\n\nconst transactionsToTest = [\n  {\n    id: 1,\n    amount: 2500,\n    text: 'Salary',\n  },\n  {\n    id: 2,\n    amount: -250,\n    text: 'Donation',\n  },\n  {\n    id: 3,\n    amount: -15,\n    text: 'Book',\n  },\n  {\n    id: 4,\n    amount: -3,\n    text: 'Coffee',\n  },\n  {\n    id: 5,\n    amount: 100,\n    text: 'Present',\n  },\n];\n\nconst transactions = transactionsToTest;\n\nfunction renderTransactionList(transactions){ \n  const markup = transactions\n    .map(({ id, amount, text }) => createTransactionMarkup({ id, amount, text }))\n    .join('');\n  refs.transactionList.insertAdjacentHTML('afterbegin', markup);\n\n}\n\nfunction createTransactionMarkup({ id, amount, text }) {\n  const amountClass = amount < 0 ? 'minus' : 'plus';\n  return `<li\n          class=${amountClass}\n        >\n          ${text} <span>${amount} </span\n          ><button id=${id} class=\"delete-btn\">x</button>\n        </li>`;\n}\n\nfunction addTransaction(e) {\n  e.preventDefault();\n  const {\n    elements: { text, amount },\n  } = e.currentTarget;\n  if (!text.value.trim() || !amount.value.trim()) {\n    alert('All the fields must be filled');\n    return;\n  }\n  const transactionObj = {\n    id: Date.now().toString(),\n    [text.name]: text.value,\n    [amount.name]: Number(amount.value),\n  };\n  console.log('typeof transactionObj.amount.value:', typeof transactionObj.amount.value);\n\n  console.log(transactionObj);\n  transactions.push(transactionObj);\n  storage.save('transactions', transactions);\n  const transactionMarkup = createTransactionMarkup(transactionObj);\n  refs.transactionList.insertAdjacentHTML('beforeend', transactionMarkup);\n  e.currentTarget.reset();\n}\nrefs.form.addEventListener('submit', addTransaction);\n\nfunction deleteTransactionById(e) {\n  const id = Number(e.target.id);\n  const filteredTransactions = transactions.filter(transaction => transaction.id !== id);\n  refs.transactionList.innerHTML = \"\";\n  renderTransactionList(filteredTransactions);\n  storage.save('transactions', filteredTransactions);\n}\n\n\n\nconst total = transactions.reduce((acc, {amount})=>acc+=amount, 0)\nrefs.totalBalance.textContent = `$${total}`;\n\nlet income = 0;\nlet expense = 0;\n\ntransactions.forEach(({ amount }) => {\n  return amount > 0 ? (income += amount) : expense+=amount\n})\n\n\nrefs.income.textContent = `$${income}`;\nrefs.expense.textContent = `$${-expense}`;\nrenderTransactionList(transactions)\n  refs.deleteButton = document.querySelector('.delete-btn');\n  refs.deleteButton.addEventListener('click',  deleteTransactionById)\n\n\n"]}